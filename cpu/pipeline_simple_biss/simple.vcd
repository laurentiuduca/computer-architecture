$date
	Sat Mar 28 12:10:40 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_pipeline_biss $end
$var wire 16 ! d [15:0] $end
$var wire 16 " c [15:0] $end
$var wire 16 # b [15:0] $end
$var reg 16 $ a [15:0] $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$scope module ps_et1 $end
$var wire 16 ' a [15:0] $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 16 ( b [15:0] $end
$var reg 16 ) next_b [15:0] $end
$scope module r1 $end
$var wire 1 % clk $end
$var wire 16 * next [15:0] $end
$var wire 1 & rst $end
$var reg 16 + out [15:0] $end
$upscope $end
$upscope $end
$scope module ps_et2 $end
$var wire 16 , b [15:0] $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 16 - c [15:0] $end
$var reg 16 . next_c [15:0] $end
$scope module r2 $end
$var wire 1 % clk $end
$var wire 16 / next [15:0] $end
$var wire 1 & rst $end
$var reg 16 0 out [15:0] $end
$upscope $end
$upscope $end
$scope module ps_et3 $end
$var wire 16 1 c [15:0] $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 16 2 d [15:0] $end
$var reg 16 3 next_d [15:0] $end
$scope module r3 $end
$var wire 1 % clk $end
$var wire 16 4 next [15:0] $end
$var wire 1 & rst $end
$var reg 16 5 out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
1&
0%
b0 $
b0 #
b0 "
b0 !
$end
#50000
1%
#100000
0%
#150000
1%
#200000
0%
0&
#250000
1%
#300000
b1011 )
b1011 *
0%
b1 $
b1 '
#350000
b1101111 .
b1101111 /
b1011 #
b1011 (
b1011 +
b1011 ,
1%
#400000
b1100 )
b1100 *
0%
b10 $
b10 '
#450000
b10001010111 3
b10001010111 4
b1110000 .
b1110000 /
b1101111 "
b1101111 -
b1101111 0
b1101111 1
b1100 #
b1100 (
b1100 +
b1100 ,
1%
#500000
b1101 )
b1101 *
0%
b11 $
b11 '
#550000
b1110001 .
b1110001 /
b10001011000 3
b10001011000 4
b1101 #
b1101 (
b1101 +
b1101 ,
b1110000 "
b1110000 -
b1110000 0
b1110000 1
b10001010111 !
b10001010111 2
b10001010111 5
1%
#600000
b1110 )
b1110 *
0%
b100 $
b100 '
#650000
b10001011001 3
b10001011001 4
b1110010 .
b1110010 /
b10001011000 !
b10001011000 2
b10001011000 5
b1110001 "
b1110001 -
b1110001 0
b1110001 1
b1110 #
b1110 (
b1110 +
b1110 ,
1%
#700000
b1111 )
b1111 *
0%
b101 $
b101 '
#750000
b1110011 .
b1110011 /
b10001011010 3
b10001011010 4
b1111 #
b1111 (
b1111 +
b1111 ,
b1110010 "
b1110010 -
b1110010 0
b1110010 1
b10001011001 !
b10001011001 2
b10001011001 5
1%
#800000
b10000 )
b10000 *
0%
b110 $
b110 '
#850000
b10001011011 3
b10001011011 4
b1110100 .
b1110100 /
b10001011010 !
b10001011010 2
b10001011010 5
b1110011 "
b1110011 -
b1110011 0
b1110011 1
b10000 #
b10000 (
b10000 +
b10000 ,
1%
#900000
b0 )
b0 *
0%
b0 $
b0 '
#950000
b0 .
b0 /
b10001011100 3
b10001011100 4
b0 #
b0 (
b0 +
b0 ,
b1110100 "
b1110100 -
b1110100 0
b1110100 1
b10001011011 !
b10001011011 2
b10001011011 5
1%
#1000000
0%
#1050000
b0 3
b0 4
b10001011100 !
b10001011100 2
b10001011100 5
b0 "
b0 -
b0 0
b0 1
1%
#1100000
0%
#1150000
b0 !
b0 2
b0 5
1%
#1200000
0%
#1250000
1%
#1300000
0%
#1350000
1%
#1400000
0%
#1450000
1%
#1500000
0%
#1550000
1%
#1600000
0%
#1650000
1%
#1700000
0%
#1750000
1%
#1800000
0%
#1850000
1%
#1900000
0%
#1950000
1%
#2000000
0%
